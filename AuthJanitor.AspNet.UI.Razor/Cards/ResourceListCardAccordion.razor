<Accordion>
    @foreach (var resource in Resources)
    {
        <Collapse Visible="@Visibilities[resource.ObjectId]">
            <CollapseHeader>
                <Button Clicked="@(() => Invert(resource))">
                    <ResourceNameStyled Value="@resource" />
                </Button>
                <RiskScoreBadge Value="@resource.RiskScore" Float="Float.Right" Class="mt-2" />
            </CollapseHeader>
            <CollapseBody>
                <Container Fluid="true">
                    <Row>
                        <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is12">
                            <ProviderSettingsCard ProviderConfiguration="@resource.ProviderConfiguration"
                                                  ProviderType="@resource.ProviderType"
                                                  ShowEditControls="false" />
                        </Column>
                    </Row>
                    <Row>
                        <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is6.OnDesktop.Is12">
                            <RiskListCard Risks="@resource.Risks" />
                        </Column>
                        <Column Margin="Margin.Is1.OnY" ColumnSize="ColumnSize.Is6.OnDesktop.Is12">
                            <ActionDescriptionCard Description="@resource.RuntimeDescription" />
                        </Column>
                    </Row>
                </Container>
            </CollapseBody>
        </Collapse>
    }
</Accordion>

@using AuthJanitor.UI.Common.Resources
@using AuthJanitor.UI.Common.Risks
@code {
    protected Dictionary<Guid, bool> Visibilities { get; set; } = new Dictionary<Guid, bool>();

    [Parameter]
    public IEnumerable<ResourceViewModel> Resources { get; set; } = new List<ResourceViewModel>();

    protected override void OnParametersSet()
    {
        foreach (var r in Resources)
        {
            Visibilities[r.ObjectId] = false;
        }
    }

    protected void Invert(ResourceViewModel resource)
    {
        Visibilities[resource.ObjectId] = !Visibilities[resource.ObjectId];
        StateHasChanged();
    }
}
